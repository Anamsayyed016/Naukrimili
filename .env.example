# Job Portal Environment Configuration
# Copy this file to .env.local (preferred for Next.js) and fill in your actual values.
# Keep secrets out of version control. Only variables prefixed with NEXT_PUBLIC_ are exposed to the browser.

# ===========================================
# DYNAMIC OAUTH2 AUTHENTICATION CONFIG
# ===========================================

# Environment Detection
NODE_ENV=development
ENVIRONMENT=development # development | staging | production

# NextAuth.js Configuration
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=your-super-secret-key-here-min-32-chars

# ===========================================
# GOOGLE OAUTH2 CONFIGURATION (Dynamic)
# ===========================================

# Development Environment
GOOGLE_CLIENT_ID_DEV=your-google-dev-client-id
GOOGLE_CLIENT_SECRET_DEV=your-google-dev-client-secret

# Staging Environment  
GOOGLE_CLIENT_ID_STAGING=your-google-staging-client-id
GOOGLE_CLIENT_SECRET_STAGING=your-google-staging-client-secret

# Production Environment
GOOGLE_CLIENT_ID_PROD=your-google-prod-client-id
GOOGLE_CLIENT_SECRET_PROD=your-google-prod-client-secret

# ===========================================
# LINKEDIN OAUTH2 CONFIGURATION (Dynamic)
# ===========================================

# Development Environment
LINKEDIN_CLIENT_ID_DEV=your-linkedin-dev-client-id
LINKEDIN_CLIENT_SECRET_DEV=your-linkedin-dev-client-secret

# Staging Environment
LINKEDIN_CLIENT_ID_STAGING=your-linkedin-staging-client-id
LINKEDIN_CLIENT_SECRET_STAGING=your-linkedin-staging-client-secret

# Production Environment
LINKEDIN_CLIENT_ID_PROD=your-linkedin-prod-client-id
LINKEDIN_CLIENT_SECRET_PROD=your-linkedin-prod-client-secret

# ===========================================
# OAUTH REDIRECT URIS (Dynamic by Environment)
# ===========================================

# Development
OAUTH_REDIRECT_URI_DEV=http://localhost:3000

# Staging
OAUTH_REDIRECT_URI_STAGING=https://staging.jobportal.com

# Production
OAUTH_REDIRECT_URI_PROD=https://jobportal.com

# Feature Flags
NEXT_PUBLIC_MOCK_DATA=false
NEXT_PUBLIC_DISABLE_AUTH=false

# Resume Database Configuration (PostgreSQL)
DATABASE_URL="postgresql://username:password@localhost:5432/jobportal_resumes"
POSTGRES_MAX_CONNECTIONS=20
POSTGRES_IDLE_TIMEOUT=30000
POSTGRES_CONNECTION_TIMEOUT=10000

# File Upload Configuration
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=pdf,docx,txt
UPLOAD_DIR=./uploads/resumes

# Export Configuration
EXPORT_BASE_URL=http://localhost:3000/api/exports
EXPORT_EXPIRY_HOURS=24

# Security Configuration
JWT_SECRET=your_jwt_secret_key_here
SESSION_SECRET=your_session_secret_here

# Analytics and Monitoring
ENABLE_ANALYTICS=true
LOG_LEVEL=info

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_REQUESTS_PER_HOUR=1000

# OPTIONAL: Google OAuth
GOOGLE_CLIENT_ID=<YOUR_GOOGLE_CLIENT_ID>
GOOGLE_CLIENT_SECRET=<YOUR_GOOGLE_CLIENT_SECRET>

# OPTIONAL: AWS S3 Configuration
AWS_ACCESS_KEY_ID=<YOUR_AWS_ACCESS_KEY>
AWS_SECRET_ACCESS_KEY=<YOUR_AWS_SECRET_KEY>
AWS_REGION=us-east-1
S3_BUCKET_NAME=<YOUR_S3_BUCKET_NAME>

# OPTIONAL: Backend API
BACKEND_API_URL=http://localhost:8000
NEXT_PUBLIC_API_URL=http://localhost:3000/api

# External Job/Data Providers
ADZUNA_APP_ID=your_adzuna_app_id
ADZUNA_APP_KEY=your_adzuna_app_key
RAPIDAPI_KEY=your_rapidapi_key
SERPAPI_KEY=your_serpapi_key

# Admin import secret (protect this; rotate if leaked)
IMPORT_API_KEY=some_long_random_secret

# Cache & TTL settings
CACHE_TTL_SECONDS=3600

# Optional: restrict aggregator usage to allowed origins (comma separated)
ALLOWED_ORIGINS=http://localhost:3000,https://yourdomain.com

# App Settings
NODE_ENV=development
DEBUG=true

# ---- NOTES ----
# 1. DATABASE_URL is now required for resume management system.
# 2. OPENAI_API_KEY is required for AI resume generation and analysis.
# 3. Remove NEXT_PUBLIC_DISABLE_AUTH in production.
# 4. Set NEXTAUTH_SECRET to a strong random value before deploying.
# 5. Configure PostgreSQL database before running resume features.
# 6. Set up proper file upload permissions for resume imports.
