name: Deploy with OAuth Bypass Fix

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.9
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          # EMERGENCY FIX - Simple OAuth Bypass
          set -e
          
          echo "🚨 EMERGENCY FIX - Getting website working NOW!"
          
          PROJECT_DIR="/var/www/jobportal"
          
          # Create project directory
          sudo mkdir -p "$PROJECT_DIR"
          cd "$PROJECT_DIR"
          
          # Kill any existing processes
          pm2 kill || true
          
          # Copy files from GitHub workspace (this is the key fix!)
          echo "📁 Copying files from GitHub workspace..."
          if [ -d "/github/workspace" ]; then
            sudo rsync -av --exclude='.git*' --exclude='node_modules' --exclude='.next' /github/workspace/ "$PROJECT_DIR/"
          else
            echo "⚠️ GitHub workspace not found, creating minimal setup..."
            
            # Create minimal package.json
            cat > package.json << 'EOF'
          {
            "name": "jobportal",
            "version": "0.1.0",
            "private": true,
            "scripts": {
              "dev": "next dev",
              "build": "next build",
              "start": "next start",
              "build:simple": "NODE_ENV=production next build"
            },
            "dependencies": {
              "next": "^15.5.2",
              "react": "^18",
              "react-dom": "^18"
            }
          }
          EOF
          fi
          
          # Verify package.json exists
          if [ ! -f "package.json" ]; then
            echo "❌ package.json still not found after copy!"
            exit 1
          fi
          echo "✅ package.json found"
          
          # Create server.js with OAuth bypass
          echo "🔧 Creating server.js with OAuth bypass..."
          cat > server.js << 'EOF'
          const { createServer } = require('http')
          const { parse } = require('url')
          const next = require('next')
          
          const dev = process.env.NODE_ENV !== 'production'
          const hostname = process.env.HOSTNAME || 'localhost'
          const port = process.env.PORT || 3000
          
          const app = next({ dev, hostname, port })
          const handle = app.getRequestHandler()
          
          app.prepare().then(() => {
            createServer(async (req, res) => {
              try {
                const parsedUrl = parse(req.url, true)
                
                // OAuth BYPASS: Redirect all auth requests to bypass page
                if (req.url && (req.url.includes('/auth/') || req.url.includes('/api/auth/'))) {
                  if (req.url.includes('/auth/bypass') || req.url.includes('/api/auth/bypass')) {
                    await handle(req, res, parsedUrl)
                  } else {
                    res.writeHead(302, { 'Location': '/auth/bypass' })
                    res.end()
                    return
                  }
                } else {
                  await handle(req, res, parsedUrl)
                }
              } catch (err) {
                console.error('Error occurred handling', req.url, err)
                res.statusCode = 500
                res.end('internal server error')
              }
            })
              .once('error', (err) => {
                console.error(err)
                process.exit(1)
              })
              .listen(port, () => {
                console.log(\`🚀 Server ready on http://\${hostname}:\${port}\`)
                console.log(\`🔓 OAuth bypass active\`)
              })
          })
          EOF
          
          # Create minimal app structure if missing
          if [ ! -d "app" ]; then
            echo "📱 Creating minimal app structure..."
            mkdir -p app/auth/bypass
            
            # Create bypass page
            cat > app/auth/bypass/page.tsx << 'EOF'
          'use client'
          
          import { useState } from 'react'
          import { useRouter } from 'next/navigation'
          
          export default function AuthBypassPage() {
            const router = useRouter()
            const [email, setEmail] = useState('')
            const [role, setRole] = useState('')
            const [loading, setLoading] = useState(false)
          
            const handleSubmit = async (e) => {
              e.preventDefault()
              setLoading(true)
              
              if (role === 'jobseeker') {
                router.push('/dashboard/jobseeker')
              } else if (role === 'employer') {
                router.push('/dashboard/company')
              } else if (role === 'admin') {
                router.push('/dashboard/admin')
              }
            }
          
            return (
              <div style={{ 
                minHeight: '100vh', 
                display: 'flex', 
                alignItems: 'center', 
                justifyContent: 'center',
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                fontFamily: 'system-ui, sans-serif'
              }}>
                <div style={{
                  background: 'white',
                  padding: '2rem',
                  borderRadius: '12px',
                  boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)',
                  width: '100%',
                  maxWidth: '400px'
                }}>
                  <h1 style={{ 
                    textAlign: 'center', 
                    marginBottom: '2rem',
                    color: '#1f2937',
                    fontSize: '1.5rem',
                    fontWeight: 'bold'
                  }}>
                    🔓 Quick Access
                  </h1>
                  
                  <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>
                    <div>
                      <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>
                        Email (optional)
                      </label>
                      <input
                        type="email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        placeholder="your@email.com"
                        style={{
                          width: '100%',
                          padding: '0.75rem',
                          border: '1px solid #d1d5db',
                          borderRadius: '6px',
                          fontSize: '1rem'
                        }}
                      />
                    </div>
                    
                    <div>
                      <label style={{ display: 'block', marginBottom: '0.5rem', fontWeight: '500' }}>
                        Choose Your Role
                      </label>
                      <select
                        value={role}
                        onChange={(e) => setRole(e.target.value)}
                        required
                        style={{
                          width: '100%',
                          padding: '0.75rem',
                          border: '1px solid #d1d5db',
                          borderRadius: '6px',
                          fontSize: '1rem'
                        }}
                      >
                        <option value="">Select a role...</option>
                        <option value="jobseeker">Job Seeker</option>
                        <option value="employer">Employer</option>
                        <option value="admin">Admin</option>
                      </select>
                    </div>
                    
                    <button
                      type="submit"
                      disabled={loading}
                      style={{
                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        color: 'white',
                        padding: '0.75rem',
                        border: 'none',
                        borderRadius: '6px',
                        fontSize: '1rem',
                        fontWeight: '500',
                        cursor: loading ? 'not-allowed' : 'pointer',
                        opacity: loading ? 0.7 : 1
                      }}
                    >
                      {loading ? 'Redirecting...' : 'Continue'}
                    </button>
                  </form>
                  
                  <p style={{ 
                    textAlign: 'center', 
                    marginTop: '1rem', 
                    fontSize: '0.875rem', 
                    color: '#6b7280' 
                  }}>
                    Authentication bypassed for quick access
                  </p>
                </div>
              </div>
            )
          }
          EOF
            
            # Create main page
            cat > app/page.tsx << 'EOF'
          'use client'
          
          import { useRouter } from 'next/navigation'
          
          export default function HomePage() {
            const router = useRouter()
          
            return (
              <div style={{
                minHeight: '100vh',
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                fontFamily: 'system-ui, sans-serif'
              }}>
                <div style={{ textAlign: 'center', color: 'white' }}>
                  <h1 style={{ fontSize: '3rem', marginBottom: '1rem', fontWeight: 'bold' }}>
                    🚀 NaukriMili
                  </h1>
                  <p style={{ fontSize: '1.25rem', marginBottom: '2rem', opacity: 0.9 }}>
                    Your Job Portal is Ready!
                  </p>
                  <button
                    onClick={() => router.push('/auth/bypass')}
                    style={{
                      background: 'white',
                      color: '#667eea',
                      padding: '1rem 2rem',
                      border: 'none',
                      borderRadius: '8px',
                      fontSize: '1.125rem',
                      fontWeight: '600',
                      cursor: 'pointer',
                      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)'
                    }}
                  >
                    Get Started
                  </button>
                </div>
              </div>
            )
          }
          EOF
            
            # Create layout
            cat > app/layout.tsx << 'EOF'
          export default function RootLayout({
            children,
          }: {
            children: React.ReactNode
          }) {
            return (
              <html lang="en">
                <body>{children}</body>
              </html>
            )
          }
          EOF
          fi
          
          # Create Next.js config
          cat > next.config.mjs << 'EOF'
          const nextConfig = {
            env: {
              AUTH_DISABLED: 'true',
              NEXT_PUBLIC_BYPASS_OAUTH: 'true'
            }
          }
          
          export default nextConfig
          EOF
          
          # Install dependencies
          echo "📦 Installing dependencies..."
          npm install --legacy-peer-deps --force
          
          # Build application
          echo "🔨 Building application..."
          export NODE_ENV=production
          export AUTH_DISABLED=true
          export NEXT_PUBLIC_BYPASS_OAUTH=true
          
          npm run build:simple
          
          # Create log directory
          sudo mkdir -p /var/log/jobportal
          sudo chown -R $USER:$USER /var/log/jobportal
          
          # Start with PM2
          echo "🚀 Starting application..."
          pm2 start server.js --name jobportal --env production
          pm2 save
          
          # Wait and check
          sleep 10
          pm2 status
          
          echo "✅ Deployment completed!"
          echo "🌐 Website should be accessible at: https://aftionix.in"
          echo "🔓 OAuth bypassed - users redirected to role selection"
