name: Simple Deploy with PostgreSQL Setup

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Hostinger with PostgreSQL Setup
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "🚀 Starting automated deployment with PostgreSQL setup..."
            cd /var/www/jobportal
            
            # Pull latest code
            git fetch --all
            git reset --hard origin/main
            
            # 🔴 AUTOMATIC: Setup PostgreSQL if not exists
            if ! systemctl is-active --quiet postgresql; then
              echo "🔴 Setting up PostgreSQL..."
              sudo apt update
              sudo apt install -y postgresql postgresql-contrib
              sudo systemctl start postgresql
              sudo systemctl enable postgresql
              
              # Create database and user
              sudo -u postgres createdb jobportal || true
              sudo -u postgres createuser jobportal_user || true
              sudo -u postgres psql -c "ALTER USER jobportal_user WITH PASSWORD 'secure_password_123';"
              sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE jobportal TO jobportal_user;"
              
              echo "✅ PostgreSQL setup complete!"
            else
              echo "✅ PostgreSQL already running"
            fi
            
            # 🔴 AUTOMATIC: Create production environment
            echo "🔴 Creating production environment..."
            cat > .env.local << 'ENVEOF'
            NODE_ENV=production
            DATABASE_URL="postgresql://jobportal_user:secure_password_123@localhost:5432/jobportal"
            NEXT_PUBLIC_BASE_URL=https://aftionix.in
            NEXTAUTH_SECRET="your-secret-key-here"
            ENVEOF
            
            echo "✅ Production environment configured!"
            echo "🔴 Mock data will be automatically disabled!"
            echo "🚀 PostgreSQL will be automatically used!"
            
            # Install dependencies
            npm install --legacy-peer-deps
            
            # Build application
            echo "🔨 Building application..."
            npm run build
            
            if [ $? -eq 0 ]; then
              echo "✅ Build successful!"
              
              # Restart service
              systemctl restart jobportal
              echo "✅ Service restarted!"
              
              # Check service status
              systemctl status jobportal --no-pager
              
              echo "🎉 Deployment complete!"
              echo "🔴 Mock data: DISABLED"
              echo "🚀 PostgreSQL: ACTIVE"
              echo "🌐 Website: https://aftionix.in"
            else
              echo "❌ Build failed!"
              exit 1
            fi
