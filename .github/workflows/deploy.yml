name: Deploy to Hostinger VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        echo "üì¶ Installing dependencies..."
        
        # Clean up
        rm -rf node_modules package-lock.json .next .npm .tsbuildinfo
        npm cache clean --force
        
        # Create .npmrc for better compatibility
        cat > .npmrc << 'EOF'
        engine-strict=false
        legacy-peer-deps=true
        fund=false
        audit=false
        auto-install-peers=true
        EOF
        
        # Install dependencies
        npm install --legacy-peer-deps --engine-strict=false --force
        
        # Generate Prisma client
        npx prisma generate
        
      env:
        NODE_ENV: production
        
    - name: Build application
      run: |
        echo "üî® Building application..."
        
        # Set build environment
        export NODE_ENV=production
        export NODE_OPTIONS="--max-old-space-size=4096"
        export NEXT_PUBLIC_SKIP_GOOGLE_FONTS=true
        export NEXT_TELEMETRY_DISABLED=1
        export NEXT_PUBLIC_BUILD_TIME=$(date +%s)000
        
        # Build the application
        npm run build
        
        # Verify build
        if [ ! -d ".next" ]; then
          echo "‚ùå Build failed - .next directory not found"
          exit 1
        fi
        
        echo "‚úÖ Build completed successfully"
        
      env:
        NODE_ENV: production
        NODE_OPTIONS: "--max-old-space-size=4096"
        NEXT_PUBLIC_SKIP_GOOGLE_FONTS: "true"
        NEXT_TELEMETRY_DISABLED: "1"
        
    - name: Deploy to Hostinger VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        timeout: 15m
        command_timeout: 10m
        script: |
          echo "üöÄ Starting deployment to Hostinger VPS..."
          
          # Navigate to project directory
          cd /root/jobportal
          
          # Stop PM2 process
          echo "‚èπÔ∏è Stopping PM2 process..."
          pm2 stop jobportal || true
          pm2 delete jobportal || true
          
          # Pull latest changes
          echo "üì• Pulling latest changes..."
          git pull origin main
          
          # Install dependencies
          echo "üì¶ Installing dependencies..."
          rm -f package-lock.json
          echo "engine-strict=false" > .npmrc
          echo "legacy-peer-deps=true" >> .npmrc
          echo "fund=false" >> .npmrc
          echo "audit=false" >> .npmrc
          npm install --legacy-peer-deps --engine-strict=false --force
          npx prisma generate
          
          # Build with increased memory
          echo "üî® Building application..."
          export NODE_OPTIONS="--max-old-space-size=4096"
          export NEXT_TELEMETRY_DISABLED=1
          npm run build:fast
          
          # Start PM2 process with production environment
          echo "‚ñ∂Ô∏è Starting application..."
          pm2 start ecosystem.config.cjs --env production
          
          # Check status
          echo "üìä Checking application status..."
          pm2 status
          
          # Test application
          echo "üß™ Testing application..."
          sleep 5
          curl -f http://localhost:3000/api/health || echo "Health check failed"
          
          echo "‚úÖ Deployment completed successfully!"