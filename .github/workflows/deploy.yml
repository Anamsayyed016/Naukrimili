name: Deploy to Hostinger VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Build application
      run: |
        # Nuclear fix for CI build issues
        echo "🚀 Starting nuclear CI fix..."
        
        # Complete cleanup
        rm -rf node_modules package-lock.json .next .npm .tsbuildinfo
        npm cache clean --force
        
        # Create .npmrc with comprehensive settings
        cat > .npmrc << 'EOF'
        engine-strict=false
        legacy-peer-deps=true
        fund=false
        audit=false
        auto-install-peers=true
        prefer-offline=false
        cache-max=0
        EOF
        
        # Install ALL dependencies with maximum compatibility
        npm install --legacy-peer-deps --engine-strict=false --force --no-optional
        
        # Install missing packages explicitly
        npm install --legacy-peer-deps --engine-strict=false \
          tailwindcss \
          postcss \
          autoprefixer \
          @radix-ui/react-slot \
          @radix-ui/react-dialog \
          @radix-ui/react-dropdown-menu \
          @radix-ui/react-toast \
          class-variance-authority \
          clsx \
          tailwind-merge \
          lucide-react
        
        # Install as dev dependencies
        npm install --save-dev --legacy-peer-deps --engine-strict=false \
          tailwindcss \
          postcss \
          autoprefixer \
          @radix-ui/react-slot \
          @radix-ui/react-dialog \
          @radix-ui/react-dropdown-menu \
          @radix-ui/react-toast \
          class-variance-authority \
          clsx \
          tailwind-merge \
          lucide-react
        
        # Verify critical packages
        if [ -d "node_modules/tailwindcss" ]; then
          echo "✅ tailwindcss found"
        else
          echo "❌ Installing tailwindcss manually..."
          npm install tailwindcss@latest --legacy-peer-deps --engine-strict=false --force
        fi
        
        if [ -d "node_modules/lucide-react" ]; then
          echo "✅ lucide-react found"
        else
          echo "❌ Installing lucide-react manually..."
          npm install lucide-react@latest --legacy-peer-deps --engine-strict=false --force
        fi
        
        # Create missing directories
        mkdir -p .next components/ui lib components/auth
        
        # Generate Prisma client
        npx prisma generate
        
        # Build application with proper environment
        export NEXT_PUBLIC_BUILD_TIME=$(date +%s)000
        npm run build
      env:
        NODE_ENV: production
        NODE_OPTIONS: "--max-old-space-size=4096"
        
    - name: Deploy to Hostinger VPS
      uses: appleboy/ssh-action@v0.1.9
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        timeout: 15m
        command_timeout: 10m
        script: |
          echo "🚀 Starting deployment to Hostinger VPS..."
          
          # Navigate to project directory
          cd /var/www/jobportal
          
          # Stop PM2 process
          echo "⏹️ Stopping PM2 process..."
          pm2 stop jobportal || true
          pm2 delete jobportal || true
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git pull origin main
          
          # Install dependencies
          echo "📦 Installing dependencies..."
          rm -f package-lock.json
          echo "engine-strict=false" > .npmrc
          echo "legacy-peer-deps=true" >> .npmrc
          echo "fund=false" >> .npmrc
          echo "audit=false" >> .npmrc
          npm install --legacy-peer-deps --engine-strict=false --force
          npm install tailwindcss postcss autoprefixer @radix-ui/react-slot @radix-ui/react-dialog @radix-ui/react-dropdown-menu @radix-ui/react-toast class-variance-authority clsx tailwind-merge lucide-react --legacy-peer-deps --engine-strict=false
          npm install --save-dev tailwindcss postcss autoprefixer --legacy-peer-deps --engine-strict=false
          npx prisma generate
          
          # Build with increased memory
          echo "🔨 Building application..."
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run build:fast
          
          # Start PM2 process with production environment
          echo "▶️ Starting application..."
          pm2 start ecosystem.config.cjs --env production
          
          # Check status
          echo "📊 Checking application status..."
          pm2 status
          
          # Test application
          echo "🧪 Testing application..."
          sleep 5
          curl -f http://localhost:3000/api/health || echo "Health check failed"
          
          echo "✅ Deployment completed successfully!"
