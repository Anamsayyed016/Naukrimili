name: Deploy to Hostinger VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

    # Pre-flight: prepare SSH and verify connectivity
    - name: Add SSH key and verify connection
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.SSH_USER }}
        PORT: ${{ secrets.SSH_PORT }}
        PRIVATE_KEY: ${{ secrets.SSH_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        # Optional: trust host key to avoid interactive prompt
        ssh-keyscan -p "$PORT" -H "$HOST" >> ~/.ssh/known_hosts 2>/dev/null || true
        # Test connection (non-fatal if it fails but surfaces logs)
        ssh -i ~/.ssh/id_rsa -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" "echo Connected to $(hostname)" || exit 1
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          echo "ðŸš€ Starting deployment..."
          
          # Navigate to project directory
          cd /home/root/jobportal
          
          # Pull latest changes
          echo "ðŸ“¥ Pulling latest changes..."
          git pull origin main || (
            echo "Repository missing, cloning..." && \
            git clone https://github.com/${{ github.repository }}.git . && \
            git checkout main
          )
          
          # Install production dependencies
          echo "ðŸ“¦ Installing dependencies..."
          npm ci --production || npm install --production
          
          # Build the application
          echo "ðŸ”¨ Building application..."
          npm run build
          
          # Restart the application
          echo "ðŸ”„ Restarting application..."
          pm2 restart jobportal || pm2 start npm --name "jobportal" -- start
          pm2 save
          
          echo "âœ… Deployment completed successfully!"
          
    - name: Deployment status
      run: |
        echo "ðŸŽ‰ Deployment workflow completed!"
        echo "Your job portal is now live at: https://aftionix.in"
